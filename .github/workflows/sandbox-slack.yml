name: Stage. CI/CD with Blue/Green Deployment
run-name: ${{ github.actor }} is running GitHub Actions ðŸš€

on:
  workflow_dispatch:
    inputs:
      software-setup:
        description: 'Setup/configure required software on EC2 instances (Optional)'
        default: false
        type: boolean
      deployment-env:
        description: 'Deployment environment'
        required: true
        default: 'blue'
        type: choice
        options:
          - blue
          - green
      git-ref:
        description: 'Git Reference (Optional. branch/commit hash)'
        required: false
      jira-id:
        description: 'Jira Release ID (Optional)'
        required: false

env:
    AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    ENV_FILE_SECRET_NAME: sandbox/env
    SAS_GIT_DEPLOY_KEY_SECRET_NAME: sandbox/sas_git_deploy_key
    SYMFONY_GIT_DEPLOY_KEY_SECRET_NAME: sandbox/symfony_deploy_key
    DATADOG_API_KEY_SECRET_NAME: sandbox/datadog_api_key
    SLACK_WEBHOOK_SECRET_NAME: sandbox/slack_webhook
    SLACK_CHANNEL: deployment
    API_KEY_SECRET_NAME: sandbox/api_key
    GIT_DEPLOY_KEY_SECRET_NAME: sandbox/infrastructure_deploy_key
    INFRASTRUCTURE_GIT_REPOSITORY_URL: "git@github.com:SellerAmp/selleramp-infrastructure.git"
    INFRASTRUCTURE_GIT_REPOSITORY_BRANCH: dev
    INFRASTRUCTURE_GIT_DEPLOY_KEY_SECRET_NAME: sandbox/infrastructure_git_deploy_key
    AWS_DEFAULT_REGION: eu-west-1
    GIT_BRANCH: main

jobs:
    build:
        runs-on: ubuntu-latest
        name: Build Docker image
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ env.GIT_BRANCH }}
              if: github.event.inputs.git-ref == ''

            - name: Checkout Repository (Custom Git Reference)
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: ${{ github.event.inputs.git-ref }}
              if: github.event.inputs.git-ref != ''

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_DEFAULT_REGION }}
            
            - name: Get secrets from aws secret manager
              id: get-aws-secret
              uses: aws-actions/aws-secretsmanager-get-secrets@v2
              with:
                secret-ids: |
                    SAS_GIT_DEPLOY_KEY, ${{ env.SAS_GIT_DEPLOY_KEY_SECRET_NAME }}
                    INFRASTRUCTURE_GIT_DEPLOY_KEY, ${{ env.INFRASTRUCTURE_GIT_DEPLOY_KEY_SECRET_NAME }}
                    ,${{ env.SLACK_WEBHOOK_SECRET_NAME }}
                parse-json-secrets: true

            - name: Copy Infrastructure git deploy key
              run: |
                  touch /tmp/deploy-key-file.pem
                  echo "${{ env.INFRASTRUCTURE_GIT_DEPLOY_KEY }}" > /tmp/deploy-key-file.pem
                  chmod 0600 /tmp/deploy-key-file.pem
              shell: bash

            - name: Clone Infrastructure repository
              run: |
                  mkdir -p /tmp/infrastructure
                  GIT_SSH_COMMAND="ssh -i /tmp/deploy-key-file.pem -o StrictHostKeyChecking=no" git clone --depth 1 --branch ${{ env.INFRASTRUCTURE_GIT_REPOSITORY_BRANCH }} ${{ env.INFRASTRUCTURE_GIT_REPOSITORY_URL }} .
    
      
            # - name: Slack Notification
            #   uses: rtCamp/action-slack-notify@v2
            #   env:
            #       SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK }}
            #       SLACK_CHANNEL: ${{ env.SLACK_CHANNEL }}
            #       SLACK_COLOR: ${{ job.status }}
            #       SLACK_FOOTER: 'Powered By SellerAmp'
            #       MSG_MINIMAL: true
            #       SLACK_ICON_EMOJI: ':rocket:'
            #       SLACK_MESSAGE: |
            #           Test deploy from AWS Secret manager
            #       SLACK_TITLE: 'Deploy ðŸš€'
            #       SLACK_USERNAME: Deploy Started